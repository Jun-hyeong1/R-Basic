install.packages("mlbench")
library(mlbench)      #라이브러리 설치
data(Ozone)
data(Ozone)
plot(Ozone$V8, Ozone$V9)
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone", pch="+")
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone", col="#FF0000") # 색상
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone", xlim=c(0,100),ylim=c(0,90)) # 축 범위 지정
data(cars)
str(cars)
plot(cars)
plot(cars, type="l")     # 이녀석 꼭 소문자여야 한다, 꺾은 선 그래프 그리는 법
plot(cars, type="b")
plot(cars, type="o")
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp")
plot(cars, type="l")     # 이녀석 꼭 소문자여야 한다, 꺾은 선 그래프 그리는 법
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp", type = "o")
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp", type = "l")
tapply(cars$dist, cars$speed, mean)            # 각각 그룹에 대한 평균으로 요약한다.######처음보는 거. 디플라이어로 하는법?summary
plot(cars)
tapply(cars$dist, cars$speed, mean)            # 각각 그룹에 대한 평균으로 요약한다.######처음보는 거. 디플라이어로 하는법?summary
plot(tapply(cars$dist, cars$speed, mean), type="o", cex=0.5, xlab="speed", ylab="dist")
plot(cars)
plot(cars, type="l", lty="dashed")             # 선 유형은 lty=""를 사용한다, 점선.
opar <- par(mfrow=c(1,2))                                  # par은 그래프 배열방식을 지정하는 그래픽 파라미터이다, 실행해보자
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone")
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone2")
par(opar)
tapply(cars$dist, cars$speed, mean)            # 각각 그룹에 대한 평균으로 요약한다.######처음보는 거. 디플라이어로 하는법?summary
plot(tapply(cars$dist, cars$speed, mean), type="o", cex=0.5, xlab="speed", ylab="dist")
opar <- par(mfrow=c(1,3))                                  # par은 그래프 배열방식을 지정하는 그래픽 파라미터이다, 실행해보자
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone")
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone2")
plot(tapply(cars$dist, cars$speed, mean), type="o", cex=0.5, xlab="speed", ylab="dist")
opar <- par(mfrow=c(1,2))                                  # par은 그래프 배열방식을 지정하는 그래픽 파라미터이다, 실행해보자
plot(jitter(Ozone$V6),jitter(Ozone$V7), xlab="windspeed", ylab="humidity",main="Ozone1")    #노이즈가 추가됐다
par(opar)
plot(jitter(Ozone$V6),jitter(Ozone$V7), xlab="windspeed", ylab="humidity",main="Ozone1")    #노이즈가 추가됐다
opar <- par(mfrow=c(1,2))                                  # par은 그래프 배열방식을 지정하는 그래픽 파라미터이다, 실행해보자
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone")
plot(Ozone$V8, Ozone$V9, xlab="Sandburg Temp", ylab="El Monte Temp",main="Ozone2")
par(opar)
jitter(
x,            # 노이즈를 추가할 숫자 벡터
# factor, amount는 추가할 노이즈의 정도를 지정한다. 보통은 이 값들을 직접 지정할 필요는 없다.
# 노이즈의 크기를 지정하는 수식은 help(jitter)를 참고하기 바란다.
factor=1,
amount=NULL
)
head(Ozone[,c("V6","V7")])    #열이름 대소문자 주의하자
plot(Ozone$V6, Ozone$V7, xlab="windspeed", ylab="humidity",main="Ozone")
plot(jitter(Ozone$V6),jitter(Ozone$V7), xlab="windspeed", ylab="humidity",main="Ozone1")    #노이즈가 추가됐다
plot(iris$Sepal.Width, iris$Sepal.Length, cex=.5, pch=20, xlab="width", ylab="length",main="iris")
rm(opar)
?rm
plot(jitter(Ozone$V6),jitter(Ozone$V7), xlab="windspeed", ylab="humidity",main="Ozone1")    #노이즈가 추가됐다
par(opar)
jitter(
x,            # 노이즈를 추가할 숫자 벡터
# factor, amount는 추가할 노이즈의 정도를 지정한다. 보통은 이 값들을 직접 지정할 필요는 없다.
# 노이즈의 크기를 지정하는 수식은 help(jitter)를 참고하기 바란다.
factor=1,
amount=NULL
)
head(Ozone[,c("V6","V7")])    #열이름 대소문자 주의하자
plot(Ozone$V6, Ozone$V7, xlab="windspeed", ylab="humidity",main="Ozone")
plot(jitter(Ozone$V6),jitter(Ozone$V7), xlab="windspeed", ylab="humidity",main="Ozone1")    #노이즈가 추가됐다
plot(iris$Sepal.Width, iris$Sepal.Length, cex=.5, pch=20, xlab="width", ylab="length",main="iris")
points(iris$Petal.Width, iris$Petal.Length, cex=.5, pch="+", col="#FF0000")                 #앞의 그래프에 붉은색 점이 추가된다
with(iris, {
plot(NULL, xlim=c(0, 5), ylim=c(0, 10),
xlab="width", ylab="length", main="iris", type="n")                      #type="n"을 설정하면 가상의 그래프가 그려진다
points(Sepal.Width, Sepal.Length, cex=.5, pch=20)                             #point로 점을 그려줬다.
points(Petal.Width, Petal.Length, cex=.5, pch="+", col="#FF0000")
})
lines(lowess(cars))    #추세선 생성         # lowess는 "지역가중다항식회귀", 저차 다항식에 대해 회귀해준다, 비모수적이다
plot(cars)                                  # cars 데이터에 대해서,
lines(lowess(cars))    #추세선 생성         # lowess는 "지역가중다항식회귀", 저차 다항식에 대해 회귀해준다, 비모수적이다
plot(4:6, 4:6)
text(5, 5, "미드")
text(5, 5, "레드", adj=c(0, 0))
text(5, 5, "바텀", adj=c(0, 1))
text(5, 5, "탑", adj=c(1, 0))
text(5, 5, "블루", adj=c(1, 1))     #(5,5)위치에, 텍스트"블루"를, 좌측하단에 표시한다
plot(cars, cex=.5)
text(cars$speed, cars$dist, pos=4)  #해보면 알아, 점 대신에 텍스트로 표시
points(iris$Petal.Width, iris$Petal.Length, pch="+", col="#FF0000")               # 다른데이터에 대해 붉은 십자가를 그렸다
points(iris$Petal.Width, iris$Petal.Length, pch="+", col="#FF0000")               # 다른데이터에 대해 붉은 십자가를 그렸다
plot(iris$Sepal.Width, iris$Sepal.Length, pch=20, xlab="width", ylab="length")    #산점도를 그렸다
points(iris$Petal.Width, iris$Petal.Length, pch="+", col="#FF0000")               # 다른데이터에 대해 붉은 십자가를 그렸다
legend("topright", legend=c("Sepal", "Petal"), pch=c(20, 43),
col=c("black", "red"), bg="gray")                                          # 우측상단에, 해당""을, pch~ 모양으로, ~ ,bg~배경으로 그렸다
(x <- seq(-2*pi, 2*pi, 0.01))
(y <- matrix(c(cos(x), sin(x)), ncol=2))  # x,y값을 지정한다(행렬의 형태로)
matplot(x, y, lty=c("solid", "dashed"), cex=.2, type="l")   #그래프를 그린다.
abline(h=0, v=0)
matplot(x, y, lty=c("solid", "dashed"), cex=.2, type="l")   #그래프를 그린다.
abline(x=0, y=0)
pairs(~ Sepal.Width + Sepal.Length + Petal.Width + Petal.Length,
data=iris, pch=c(1, 2, 3)[iris$Species])                       #pch 1,2,3이 세개의 종에 대해 각각 사각형,원형,십자형을 대응시킴
data("Titanic")
str(Titanic)                                #타이타닉 데이터는 여러개의 범주로 대상을 분류하고 있다.
mosaicplot(Titanic, color =T)               #모자이크 플롯을 그렸다
mosaicplot(~Class+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot( Titanic, ~Class+Survived,color=TRUE, cex=1.2)
mosaicplot(~Class+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot( Titanic, ~Class+Survived, color=TRUE, cex=1.2)
mosaicplot(~Class+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot(Titanic, color =T)               #모자이크 플롯을 그렸다
mosaicplot(~Class+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot( Titanic, ~Class+Survived, color=TRUE, cex=1.2)
mosaicplot( data=Titanic, ~Class+Survived, color=TRUE, cex=1.2)
mosaicplot(data=Titanic, color =T)               #모자이크 플롯을 그렸다
mosaicplot(Titanic, color =T)               #모자이크 플롯을 그렸다
mosaicplot(~Class+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
str(Titanic)                                #타이타닉 데이터는 여러개의 범주로 대상을 분류하고 있다.
mosaicplot(~Sex+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot(~Aged+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot(~Age+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
mosaicplot(~Class+Survived, data= Titanic, color=TRUE, cex=1.2)      #두개의 범주만을 선정해서 단순화 한다.
read.csv(https://learn.inha.ac.kr/mod/ubfile/view.php?id=256864)
read.csv(C:\Users\박준형\Downloads\iris)
read.csv(C:\Users\박준형\Downloads\iris)
read.csv2(C:\Users\박준형\Downloads\iris)
read.csv(C:\Users\박준형\Downloads\)
read.csv("C:\Users\박준형\Downloads\")
read.csv2(C:\Users\박준형\Downloads\iris)
read.csv("C:\Users\박준형\Downloads\")
read.csv(C:\Users\박준형\Downloads\iris)
read.csv("C:\Users\박준형\Downloads\iris")
read.csv("C:\Users\박준형\Documents\기초통계실습1")
read.csv("C:/Users/박준형/Documents/기초통계실습1")
read.csv("C:/Users/박준형/Documents/기초통계실습1/iris")
read.csv("C:/Users/박준형/Documents/기초통계실습1/iris")
?read.csv
read.csv("C:/Users/박준형/Documents/기초통계실습1/iris", header=T)
read.exl("C:/Users/박준형/Documents/기초통계실습1/iris", header=T)
read.csv("C:/Users/박준형/Documents/기초통계실습1/iris.csv", header=T)
read.csv(C:/Users/박준형/Documents/기초통계실습1/iris.csv, header=T)
